version: '3.8'

services:
  application:
    container_name: customer_manager_app
    build: ./
    entrypoint: ./.docker/entrypoint.sh
    environment:
      - DB_HOST=customer_manager_postgres
      - DB_DATABASE=customer_manager
      - DB_USERNAME=root
      - DB_PASSWORD=root
    ports:
      - 9501:9501
    volumes:
      - ./:/var/www

      # nginx pools configuration
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/microservices.conf:/etc/nginx/conf.d/microservices.conf

      # php-fpm socket
      - "phpsocket:/var/run"
    networks:
      - docker-net
    depends_on:
      - postgresql
      - redis

  nginx:
    container_name: customer_manager_nginx
    image: nginx:1.25.2-alpine
    volumes:
      - ./:/var/www
      
      # nginx pools configuration
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/microservices.conf:/etc/nginx/conf.d/microservices.conf

      # php-fpm .conf's
      - ./.docker/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./.docker/php-fpm/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf

      # php-fpm socket
      - "phpsocket:/var/run"
    ports:
      - "8080:80" # http
      # - "443:443" # https
    networks:
      - docker-net
    depends_on:
      - application

  postgresql:
    container_name: customer_manager_postgres
    image: postgres:latest 
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=customer_manager
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - "5432:5432"
    networks:
      - docker-net

  mongo:
    container_name: customer_manager_mongo
    image: mongo:7.0
    volumes:
      - mongo_db:/var/lib/mongo
    environment:
      TZ: America/Sao_Paulo
    ports:
      - "27017:27017"
    networks:
      - docker-net

  redis:
    container_name: customer_manager_redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - docker-net

  metabase:
    container_name: customer_manager_metabase
    build:
      context: ./.docker/metabase
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MB_DB_FILE=/metabase/metabase.db
    volumes:
      - ./.docker/metabase/metabase-data:/metabase
    networks:
      - docker-net
    depends_on:
      - postgresql

volumes:
  postgresql_data:
  mongo_db:
  phpsocket:

networks:
  docker-net:
    external: true  